apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: google-postgresql
  labels:
    provider: google
    db: postgresql
spec:
  compositeTypeRef:
    apiVersion: devopstoolkitseries.com/v1alpha1
    kind: SQL
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.annotations
      toFieldPath: metadata.annotations
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
  resources:
  - name: sql
    base:
      apiVersion: sql.gcp.upbound.io/v1beta1
      kind: DatabaseInstance
      spec:
        forProvider:
          region: us-east1
          rootPasswordSecretRef:
            key: password
          settings:
          - availabilityType: REGIONAL
            backupConfiguration:
            - enabled: true
              binaryLogEnabled: false
            ipConfiguration:
            - ipv4Enabled: true
              authorizedNetworks:
              - name: all
                value: 0.0.0.0/0
          deletionProtection: false
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.parameters.version
      toFieldPath: spec.forProvider.databaseVersion
      transforms:
      - type: string
        string:
          fmt: POSTGRES_%s
    - fromFieldPath: spec.parameters.size
      toFieldPath: spec.forProvider.settings[0].tier
      transforms:
      - type: map
        map:
          small: db-custom-1-3840
          medium: db-custom-16-61440
          large: db-custom-64-245760
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.rootPasswordSecretRef.name
      transforms:
      - type: string
        string:
          fmt: "%s-password"
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.forProvider.rootPasswordSecretRef.namespace
  - name: user
    base:
      apiVersion: sql.gcp.upbound.io/v1beta1
      kind: User
      spec:
        forProvider:
          passwordSecretRef:
            key: password
          instanceSelector:
            matchControllerRef: true
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.passwordSecretRef.name
      transforms:
      - type: string
        string:
          fmt: "%s-password"
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.forProvider.passwordSecretRef.namespace
  - name: sql-config
    base:
      apiVersion: postgresql.sql.crossplane.io/v1alpha1
      kind: ProviderConfig
      metadata:
        name: default
      spec:
        credentials:
          source: PostgreSQLConnectionSecret
          connectionSecretRef:
            namespace: crossplane-system
        sslMode: require
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.id
      toFieldPath: spec.credentials.connectionSecretRef.name
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.credentials.connectionSecretRef.namespace
    readinessChecks:
    - type: None
  - name: sql-db
    base:
      apiVersion: postgresql.sql.crossplane.io/v1alpha1
      kind: Database
      spec:
        forProvider: {}
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name
  - name: kubernetes
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: ProviderConfig
      spec:
        credentials:
          source: InjectedIdentity
    patches:
    - fromFieldPath: metadata.annotations
      toFieldPath: metadata.annotations
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-sql"
    readinessChecks:
    - type: None
  - name: sql-secret
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      metadata:
        name: sql-secret
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: Secret
            metadata:
              namespace: crossplane-system
            data:
              port: NTQzMg==
        references:
        - patchesFrom:
            apiVersion: sql.gcp.upbound.io/v1beta1
            kind: User
            namespace: crossplane-system
            fieldPath: metadata.name
          toFieldPath: stringData.username
        - patchesFrom:
            apiVersion: v1
            kind: Secret
            fieldPath: data.password
          toFieldPath: data.password
        - patchesFrom:
            apiVersion: sql.gcp.upbound.io/v1beta1
            kind: DatabaseInstance
            namespace: crossplane-system
            fieldPath: status.atProvider.publicIpAddress
          toFieldPath: stringData.endpoint
    patches:
    - type: PatchSet
      patchSetName: metadata
    - fromFieldPath: spec.id
      toFieldPath: spec.references[0].patchesFrom.name
    - fromFieldPath: spec.id
      toFieldPath: spec.references[1].patchesFrom.name
      transforms:
      - type: string
        string:
          fmt: "%s-password"
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.references[1].patchesFrom.namespace
    - fromFieldPath: spec.id
      toFieldPath: spec.references[2].patchesFrom.name
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.metadata.name
    - fromFieldPath: spec.id
      toFieldPath: spec.providerConfigRef.name
      transforms:
      - type: string
        string:
          fmt: "%s-sql"
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace