apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cluster-aws
  labels:
    provider: aws
    cluster: eks
spec:
  compositeTypeRef:
    apiVersion: devopstoolkitseries.com/v1alpha1
    kind: CompositeKubernetesCluster
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
  resources:
  # - name: ekscluster
  #   base:
  #     apiVersion: eks.aws.crossplane.io/v1beta1
  #     kind: Cluster
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         version: "1.20"
  #         roleArnSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             role: controlplane
  #         resourcesVpcConfig:
  #           endpointPrivateAccess: true
  #           endpointPublicAccess: true
  #           subnetIdSelector:
  #             matchControllerRef: true
  #   patches:
  #   - fromFieldPath: metadata.annotations[crossplane.io/external-name]
  #     toFieldPath: metadata.annotations[crossplane.io/external-name]
  #   - fromFieldPath: spec.parameters.version
  #     toFieldPath: spec.forProvider.version
  #   - fromFieldPath: metadata.uid
  #     toFieldPath: spec.writeConnectionSecretToRef.name
  #     transforms:
  #       - type: string
  #         string:
  #           fmt: "%s-ekscluster"
  #   - type: ToCompositeFieldPath
  #     fromFieldPath: metadata.annotations[crossplane.io/external-name]
  #     toFieldPath: status.clusterName
  #   - type: ToCompositeFieldPath
  #     fromFieldPath: status.atProvider.status
  #     toFieldPath: status.controlPlaneStatus
  #   - fromFieldPath: spec.writeConnectionSecretToRef.namespace
  #     toFieldPath: spec.writeConnectionSecretToRef.namespace
  #   readinessChecks:
  #   - type: MatchString
  #     fieldPath: status.atProvider.status
  #     matchString: ACTIVE
  #   connectionDetails:
  #     - fromConnectionSecretKey: kubeconfig
  # - name: eksnodegroup
  #   base:
  #     apiVersion: eks.aws.crossplane.io/v1alpha1
  #     kind: NodeGroup
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         clusterNameSelector:
  #           matchControllerRef: true
  #         nodeRoleSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             role: nodegroup
  #         subnetSelector:
  #           matchLabels:
  #             access: public
  #         scalingConfig:
  #           minSize: 1
  #           maxSize: 10
  #           desiredSize: 1
  #         instanceTypes:
  #           - t3.small
  #   patches:
  #   - fromFieldPath: spec.parameters.nodeSize
  #     toFieldPath: spec.forProvider.instanceTypes[0]
  #     transforms:
  #       - type: map
  #         map:
  #           small: t3.small
  #           medium: t3.medium
  #           large: t3.large
  #   - fromFieldPath: spec.parameters.minNodeCount
  #     toFieldPath: spec.forProvider.scalingConfig.minSize
  #   - fromFieldPath: spec.parameters.minNodeCount
  #     toFieldPath: spec.forProvider.scalingConfig.desiredSize
  #   - type: ToCompositeFieldPath
  #     fromFieldPath: status.atProvider.status
  #     toFieldPath: status.nodePoolStatus
  #   readinessChecks:
  #   - type: MatchString
  #     fieldPath: status.atProvider.status
  #     matchString: ACTIVE
  # - name: iamrole-controlplane
  #   base:
  #     apiVersion: identity.aws.crossplane.io/v1beta1
  #     kind: IAMRole
  #     metadata:
  #       labels:
  #         role: controlplane
  #     spec:
  #       forProvider:
  #         assumeRolePolicyDocument: |
  #           {
  #             "Version": "2012-10-17",
  #             "Statement": [
  #                 {
  #                     "Effect": "Allow",
  #                     "Principal": {
  #                         "Service": [
  #                             "eks.amazonaws.com"
  #                         ]
  #                     },
  #                     "Action": [
  #                         "sts:AssumeRole"
  #                     ]
  #                 }
  #             ]
  #           }
  # - name: iamrole-nodegroup
  #   base:
  #     apiVersion: identity.aws.crossplane.io/v1beta1
  #     kind: IAMRole
  #     metadata:
  #       labels:
  #         role: nodegroup
  #     spec:
  #       forProvider:
  #         assumeRolePolicyDocument: |
  #           {
  #             "Version": "2012-10-17",
  #             "Statement": [
  #                 {
  #                     "Effect": "Allow",
  #                     "Principal": {
  #                         "Service": [
  #                             "ec2.amazonaws.com"
  #                         ]
  #                     },
  #                     "Action": [
  #                         "sts:AssumeRole"
  #                     ]
  #                 }
  #             ]
  #           }
  # - name: iamattachment-controlplane
  #   base:
  #     apiVersion: identity.aws.crossplane.io/v1beta1
  #     kind: IAMRolePolicyAttachment
  #     spec:
  #       forProvider:
  #         policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
  #         roleNameSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             role: controlplane
  # - name: iamattachment-service
  #   base:
  #     apiVersion: identity.aws.crossplane.io/v1beta1
  #     kind: IAMRolePolicyAttachment
  #     spec:
  #       forProvider:
  #         policyArn: arn:aws:iam::aws:policy/AmazonEKSServicePolicy
  #         roleNameSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             role: controlplane
  # - name: iamattachment-worker
  #   base:
  #     apiVersion: identity.aws.crossplane.io/v1beta1
  #     kind: IAMRolePolicyAttachment
  #     spec:
  #       forProvider:
  #         policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
  #         roleNameSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             role: nodegroup
  # - name: iamattachment-cni
  #   base:
  #     apiVersion: identity.aws.crossplane.io/v1beta1
  #     kind: IAMRolePolicyAttachment
  #     spec:
  #       forProvider:
  #         policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
  #         roleNameSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             role: nodegroup
  # - name: iamattachment-registry
  #   base:
  #     apiVersion: identity.aws.crossplane.io/v1beta1
  #     kind: IAMRolePolicyAttachment
  #     spec:
  #       forProvider:
  #         policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
  #         roleNameSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             role: nodegroup

  - name: vpc
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPC
      spec:
        forProvider:
          enableDnsHostnames: true
          enableDnsSupport: true
          cidrBlock: 10.0.0.0/16
          region: us-east-1
          tags:
            Name: crossplane-minikube-lab-vpc
            kubernetes.io/cluster/crossplane-minikube-lab: shared
  # - name: sc-nodepool
  #   base:
  #     apiVersion: ec2.aws.crossplane.io/v1beta1
  #     kind: SecurityGroup
  #     spec:
  #       forProvider:
  #         description: Cluster communication with worker nodes
  #         groupName: crossplane-minikube-lab
  #         region: us-east-1
  #         vpcIdSelector:
  #           matchControllerRef: true
  #         egress:
  #         - fromPort: 0
  #           toPort: 0
  #           ipProtocol: "-1"
  #           ipRanges:
  #           - cidrIp: "0.0.0.0/0"































  - name: public-subnet-b
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        labels:
          zone: us-east-1b
          access: public
      spec:
        forProvider:
          region: us-east-1
          availabilityZone: us-east-1b
          cidrBlock: 10.0.0.0/19
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIPOnLaunch: true
          tags:
            Name: crossplane-minikube-lab-public-subnet-b
            kubernetes.io/role/internal-elb: "1" # Required for EKS
            kubernetes.io/cluster/crossplane-minikube-lab-cluster: "owned" # Required for EKS
            kubernetes.io/cluster/crossplane-minikube-lab: shared


  - name: rta-public-b
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      metadata:
        labels:
          zone: us-east-1b
          access: public
      spec:
        forProvider:
          region: us-east-1
          subnetIdSelector:
            matchControllerRef: true
            matchLabels:
              zone: us-east-1b
              access: public
          # subnetIdRef:
          #   name: aatt-demo-public-subnet-c
          routeTableIdSelector:
            matchControllerRef: true
            matchLabels:
              access: public
          # routeTableIdRef:
          #   name: aatt-demo-route-table-public
          tags:
            Name: crossplane-minikube-lab-rta-public-b
            kubernetes.io/role/internal-elb: "1" # Required for EKS
            kubernetes.io/cluster/crossplane-minikube-lab-cluster: "owned" # Required for EKS
            kubernetes.io/cluster/crossplane-minikube-lab: shared


  - name: public-subnet-c
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        labels:
          zone: us-east-1c
          access: public
      spec:
        forProvider:
          region: us-east-1
          availabilityZone: us-east-1c
          cidrBlock: 10.0.32.0/19
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIPOnLaunch: true
          tags:
            Name: crossplane-minikube-lab-public-subnet-c
            kubernetes.io/role/internal-elb: "1" # Required for EKS
            kubernetes.io/cluster/crossplane-minikube-lab-cluster: "owned" # Required for EKS
            kubernetes.io/cluster/crossplane-minikube-lab: shared


          
  - name: rta-public-c
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      metadata:
        labels:
          zone: us-east-1c
          access: public
      spec:
        forProvider:
          region: us-east-1
          subnetIdSelector:
            matchControllerRef: true
            matchLabels:
              zone: us-east-1c
              access: public
          # subnetIdRef:
          #   name: aatt-demo-public-subnet-c
          routeTableIdSelector:
            matchControllerRef: true
            matchLabels:
              access: public
          # routeTableIdRef:
          #   name: aatt-demo-route-table-public
          tags:
            Name: crossplane-minikube-lab-rta-public-c
            kubernetes.io/role/internal-elb: "1" # Required for EKS
            kubernetes.io/cluster/crossplane-minikube-lab-cluster: "owned" # Required for EKS
            kubernetes.io/cluster/crossplane-minikube-lab: shared


  # - name: private-subnet-b
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: Subnet
  #     metadata:
  #       labels:
  #         zone: us-east-1b
  #         access: private
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         availabilityZone: us-east-1b
  #         cidrBlock: 10.0.64.0/19
  #         vpcIdSelector:
  #           matchControllerRef: true
  #         # mapPublicIPOnLaunch: true
  #         tags:
  #           Name: crossplane-minikube-lab-private-subnet-b
  #           kubernetes.io/role/internal-elb: "1" # Required for EKS
  #           kubernetes.io/cluster/crossplane-minikube-lab-cluster: "owned" # Required for EKS
  #           kubernetes.io/cluster/crossplane-minikube-lab: shared


  # - name: rta-private-b
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: RouteTableAssociation
  #     metadata:
  #       labels:
  #         zone: us-east-1b
  #         access: private
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         subnetIdSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             zone: us-east-1b
  #             access: private
  #         # subnetIdRef:
  #         #   name: aatt-demo-public-subnet-c
  #         routeTableIdSelector:
  #           matchControllerRef: true
  #         # routeTableIdRef:
  #         #   name: aatt-demo-route-table-public
  #         tags:
  #           Name: crossplane-minikube-lab
  #           kubernetes.io/role/internal-elb: "1" # Required for EKS
  #           kubernetes.io/cluster/crossplane-minikube-lab-cluster: "owned" # Required for EKS
  #           kubernetes.io/cluster/crossplane-minikube-lab: shared
  # - name: private-subnet-c
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: Subnet
  #     metadata:
  #       labels:
  #         zone: us-east-1c
  #         access: private
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         availabilityZone: us-east-1c
  #         cidrBlock: 10.0.96.0/19
  #         vpcIdSelector:
  #           matchControllerRef: true
  #         mapPublicIPOnLaunch: true
  #         tags:
  #           Name: crossplane-minikube-lab-private-subnet-c
  #           kubernetes.io/role/internal-elb: "1" # Required for EKS
  #           kubernetes.io/cluster/crossplane-minikube-lab-cluster: "owned" # Required for EKS
  #           kubernetes.io/cluster/crossplane-minikube-lab: shared


  # - name: rta-private-c
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: RouteTableAssociation
  #     metadata:
  #       labels:
  #         zone: us-east-1c
  #         access: private
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         subnetIdSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             zone: us-east-1c
  #             access: private
  #         # subnetIdRef:
  #         #   name: aatt-demo-public-subnet-c
  #         routeTableIdSelector:
  #           matchControllerRef: true
  #         # routeTableIdRef:
  #         #   name: aatt-demo-route-table-public
  #         tags:
  #           Name: crossplane-minikube-lab-rta-private-c
  #           kubernetes.io/role/internal-elb: "1" # Required for EKS
  #           kubernetes.io/cluster/crossplane-minikube-lab-cluster: "owned" # Required for EKS
  #           kubernetes.io/cluster/crossplane-minikube-lab: shared
  
  # # Internet Gateway
  # - name: internet-gateway
  #   base:
  #     apiVersion: ec2.aws.crossplane.io/v1beta1
  #     kind: InternetGateway
  #     metadata:
  #       labels:
  #         gateway: internet
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         vpcIdSelector:
  #           matchControllerRef: true
  #         tags:
  #           Name: crossplane-minikube-lab-internet-gateway

  # # NAT Gateway B
  # - name: nat-gateway-b
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: NATGateway
  #     metadata:
  #       labels:
  #         gateway: nat
  #         zone: b
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         subnetIdSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             zone: us-east-1b
  #             access: public
  #         allocationIdSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             zone: us-east-1b
  #             access: public
  #         tags:
  #           Name: crossplane-minikube-lab-nat-gateway-b

  # # EIP B
  # - name: eip-b
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: EIP
  #     metadata:
  #       labels:
  #         zone: us-east-1b
  #         access: public
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         vpc: true
  #         tags:
  #           Name: crossplane-minikube-lab-eip-b

  # # NAT Gateway C
  # - name: nat-gateway-c
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: NATGateway
  #     metadata:
  #       labels:
  #         gateway: nat
  #         zone: c
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         subnetIdSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             zone: us-east-1c
  #             access: public
  #         allocationIdSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             zone: us-east-1c
  #             access: public
  #         tags:
  #           Name: crossplane-minikube-lab-nat-gateway-c

  # # EIP C
  # - name: eip-c
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: EIP
  #     metadata:
  #       labels:
  #         zone: us-east-1c
  #         access: public
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         vpc: true
  #         tags:
  #           Name: crossplane-minikube-lab-eip-c


  # Route Table Public
  - name: route-table-public
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTable
      metadata:
        labels:
          access: public
      spec:
        forProvider:
          region: us-east-1
          vpcIdSelector:
            matchControllerRef: true
          tags:
            Name: crossplane-minikube-lab-route-table-public

  # # Route Public
  # - name: route-public
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: RouteTable
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         destinationCidrBlock: 0.0.0.0/0
  #         gatewayIdSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             gateway: internet
  #         routeTableIdSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             access: public
  #         tags:
  #           Name: crossplane-minikube-lab-route-public

  # # Route Table Private B
  # - name: route-table-private-b
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: RouteTable
  #     metadata:
  #       labels:
  #         access: private
  #         zone: b
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         vpcIdSelector:
  #           matchControllerRef: true
  #         tags:
  #           Name: crossplane-minikube-lab-route-table-private-b

  # # Route Private B
  # - name: route-private-b
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: RouteTable
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         destinationCidrBlock: 0.0.0.0/0
  #         natGatewayIdSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             gateway: nat
  #             zone: b
  #         routeTableIdSelector:
  #           matchControllerRef: true
  #           matchLabels:
  #             access: private
  #             zone: b
  #         tags:
  #           Name: crossplane-minikube-lab-route-public

  # # Route Table Private C
  # - name: route-table-private-c
  #   base:
  #     apiVersion: ec2.aws.upbound.io/v1beta1
  #     kind: RouteTable
  #     metadata:
  #       labels:
  #         access: private
  #         zone: c
  #     spec:
  #       forProvider:
  #         region: us-east-1
  #         vpcIdSelector:
  #           matchControllerRef: true
  #         tags:
  #           Name: crossplane-minikube-lab-route-table-private-c